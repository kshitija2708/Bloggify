// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id String @id @default(uuid())
  email String 
  name  String? 
  password String
  posts Post[]
  like Like[]
  comment Comment[]
  savepost SavePost[]
}
model Post{
  id String @id @default(uuid())
  title String
  content String @db.Text
  published Boolean @default(false)
  author User @relation(fields: [authorId], references: [id])
  authorId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
  like Like[]
  savepost SavePost[]
    comment Comment[]
}
model Like{
  id String @id @default(uuid())
  user User @relation(fields:[userId],references: [id])
  userId String
  post Post @relation(fields:[postId],references:[id])
  postId String
  createdAt DateTime @default(now())
}

model Comment{
  id String @id @default(uuid())
  content String @db.Text
  user User @relation(fields:[userId],references: [id])
  userId String
  post Post @relation(fields:[postId],references: [id])
  postId String
   createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt @default(now()) 
}
model SavePost{

  id String @id @default(uuid())
  user User @relation(fields:[userId],references: [id])
  userId String
  post Post @relation(fields:[postId],references: [id])
  postId String
}